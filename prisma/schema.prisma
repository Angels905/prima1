// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Livre {
  id              Int      @id @default(autoincrement())
  nom_livre       String
  nom_auteurs      String
  date_de_sortier DateTime
  Favorie         Boolean
  updatedAt       DateTime @updatedAt //info peut etre modifier et actualise auto
  auteur          Auteur[]
}

model Auteur {
  id         Int    @id @default(autoincrement())
  nom_auteurs String
  bio_auteur String
  Livre   Livre? @relation(fields: [livreId], references: [id])
  livreId Int?
}

model livre_catalogue {
  id_         Int  @id @default(autoincrement())
  CatalogueId Int?
  LivreId     Int?
}

model Catalogue {
  id              Int    @id @default(autoincrement())
  nom_catalogue   String @unique
  nombre_de_livre Int
}

model livre_compte {
  id       Int  @id @default(autoincrement())
  CompteId Int?
  livreId  Int?
}

model Telechargement {
  id       Int  @id @default(autoincrement())
  livreId  Int?
  CompteId Int?
}

model Compte {
  id Int @id @default(autoincrement())

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt //info peut etre modifier et actualise auto
  nom          String   @unique
  prenom       String?
  email        String   @unique
  mot_de_passe String
  Etudiant     Boolean
  Visiteur     Boolean
  Admin        Boolean
}

model Abonnement {
  id        Int  @id @default(autoincrement())
  CompteId  Int?
  PackageId Int?
}

model Package {
  id             Int     @id @default(autoincrement())
  package_Argent Boolean
  package_bronse Boolean
  package_or     Boolean
}
